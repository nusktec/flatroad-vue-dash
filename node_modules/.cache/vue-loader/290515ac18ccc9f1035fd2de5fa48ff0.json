{"remainingRequest":"/Users/revelation/VueJS/WnC_Apps/wc_super/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/revelation/VueJS/WnC_Apps/wc_super/src/components/BaseCheckbox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/revelation/VueJS/WnC_Apps/wc_super/src/components/BaseCheckbox.vue","mtime":1564957646448},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_super/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_super/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_super/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_super/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { randomString } from \"./stringUtils\";\n\nexport default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\"\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: \"Whether checkbox is checked\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether checkbox is disabled\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether checkbox is inline\"\n    }\n  },\n  data() {\n    return {\n      cbId: \"\",\n      touched: false\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked;\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit(\"input\", check);\n      }\n    },\n    inlineClass () {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n      return ''\n    }\n  },\n  mounted() {\n    this.cbId = randomString()\n  }\n};\n",{"version":3,"sources":["BaseCheckbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseCheckbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"custom-control custom-checkbox\"\n       :class=\"[{disabled: disabled}, inlineClass]\">\n    <input :id=\"cbId\"\n           class=\"custom-control-input\"\n           type=\"checkbox\"\n           :disabled=\"disabled\"\n           v-model=\"model\"/>\n    <label :for=\"cbId\" class=\"custom-control-label\">\n      <slot>\n        <span v-if=\"inline\">&nbsp;</span>\n      </slot>\n    </label>\n  </div>\n</template>\n<script>\nimport { randomString } from \"./stringUtils\";\n\nexport default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\"\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: \"Whether checkbox is checked\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether checkbox is disabled\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether checkbox is inline\"\n    }\n  },\n  data() {\n    return {\n      cbId: \"\",\n      touched: false\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked;\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit(\"input\", check);\n      }\n    },\n    inlineClass () {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n      return ''\n    }\n  },\n  mounted() {\n    this.cbId = randomString()\n  }\n};\n</script>\n"]}]}